<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>网络空间安全经历之识别网站cdn服务</title>
    <link href="/2025/02/15/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E7%BB%8F%E5%8E%86%E4%B9%8B%E8%AF%86%E5%88%AB%E7%BD%91%E7%AB%99cdn%E6%9C%8D%E5%8A%A1/"/>
    <url>/2025/02/15/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E7%BB%8F%E5%8E%86%E4%B9%8B%E8%AF%86%E5%88%AB%E7%BD%91%E7%AB%99cdn%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<p>在对目标网站实现渗透测试时，首先要对其进行信息收集（也可以说是资产查询），以了解目标网站的基本信息和服务状态，为下一步的端口和漏洞扫描做准备，在进行信息收集的过程中识别网站cdn服务就是其中必不可少的一环<br>那么我们为什么要识别网站cdn服务，以及该如何识别网站是否有cdn服务呢？解答和步骤如下：<br>问：我们为什么要识别网站cdn服务？<br>答：没有cdn服务的网站可以通过域名解析解析出真实服务器的ip地址，方便渗透测试者进行更精准，更深层次的信息收集<br>开通了cdn服务的网站，将源站的资源缓存到位于全球各地的CDN节点上，用户请求资源时，就近返回节点上缓存的资源，而不需要每个用户的请求都回源站获取，所以通过域名解析无法解析出真实服务器的ip地址，解析出来的是全球各地的CDN节点的ip地址，对渗透测试者没什么太大的用途<br>问：如何识别网站是否有cdn服务呢？<br>答：1.登录卡卡网<br>2.在选择位置这一个选项中选择全选<br>3.在下方输入栏内输入目标网站的域名或IP<br>4.点击确定，开始识别<br>5.识别结果出来后，看各地每一个检测结果的ip地址是否相同<br>6.相同：目标网站没有开启cdn服务，检测结果的ip地址为真实服务器的ip地址<br>不相同：目标网站开启cdn服务，检测结果的ip地址为全球各地的CDN节点的ip地址，无法解析出真实服务器的ip地址<br>ps:一般在全球开启cdn服务是很贵的，在国内开通cdn服务的也都是大公司，so懂得都懂<br>大家快来试试吧：）</p>]]></content>
    
    
    <categories>
      
      <category>网络空间安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSTV之通过声音信号发送图片的经历</title>
    <link href="/2025/02/14/SSTV%E4%B9%8B%E9%80%9A%E8%BF%87%E5%A3%B0%E9%9F%B3%E4%BF%A1%E5%8F%B7%E5%8F%91%E9%80%81%E5%9B%BE%E7%89%87%E7%9A%84%E7%BB%8F%E5%8E%86/"/>
    <url>/2025/02/14/SSTV%E4%B9%8B%E9%80%9A%E8%BF%87%E5%A3%B0%E9%9F%B3%E4%BF%A1%E5%8F%B7%E5%8F%91%E9%80%81%E5%9B%BE%E7%89%87%E7%9A%84%E7%BB%8F%E5%8E%86/</url>
    
    <content type="html"><![CDATA[<p>因为对无线电有点兴趣，所以利用寒假的空闲时间研究了一下SSTV，那就从通过声音信号发送图片的经历开始说起吧，废话不多说，上步骤：<br>1.搜索MMSSTV的官网并下载<br>2.安装好后打开软件<br>3.点击Template<br>4.鼠标右键点击<br>5.选中delete，清空点击Template界面的内容<br>6.复制你想要发送的图片<br>7.用鼠标右键点击Template界面<br>8.选择Paste image<br>9.选择以点阵发送<br>10.点击TX<br>11.选择TX Mode（如Robot 72）<br>12.在手机百度搜索Robot 36并下载<br>13.安装好后打开软件<br>14.点击上方菜单栏有着三个点的按钮<br>15.选择Select Mode<br>16.选择之前选择的TX Mode类型（如Robot 72）<br>17.点击开始按钮开始解析声音<br>18.点击电脑MMSSTV的TX界面红色的TX通过声音信号发送图片<br>19.手机的麦克风一定要靠近电脑的喇叭<br>20.MMSSTV的图片音频播放完毕后，在手机的Robot 36会显示解析出来的图片<br>解析出来的图片质量很好哦，大家快来试试吧：）</p>]]></content>
    
    
    <categories>
      
      <category>经历</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Look4Sat追踪卫星的经历</title>
    <link href="/2025/02/14/%E4%BD%BF%E7%94%A8Look4Sat%E8%BF%BD%E8%B8%AA%E5%8D%AB%E6%98%9F%E7%9A%84%E7%BB%8F%E5%8E%86/"/>
    <url>/2025/02/14/%E4%BD%BF%E7%94%A8Look4Sat%E8%BF%BD%E8%B8%AA%E5%8D%AB%E6%98%9F%E7%9A%84%E7%BB%8F%E5%8E%86/</url>
    
    <content type="html"><![CDATA[<p>寒假尝试使用Look4Sat追踪卫星，我用它追踪了国际空间站的实时位置，下面说说步骤吧：<br>1.在手机百度搜索Look4Sat并下载<br>2.给与相关权限<br>3.点击设置按钮，进行GPS定位，再进行数据库的更新<br>4.点击卫星的图标按钮<br>5.在输入框中输入ISS<br>6.选择(ZARYA)并确定<br>7.Look4Sat会显示详细的国际空间站与你的相对位置信息与出入境时间<br>大家快来试试吧：）</p>]]></content>
    
    
    <categories>
      
      <category>经历</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用YOLOv11训练自己的数据集和推理的经历</title>
    <link href="/2025/02/14/%E4%BD%BF%E7%94%A8YOLOv11%E8%AE%AD%E7%BB%83%E8%87%AA%E5%B7%B1%E7%9A%84%E6%95%B0%E6%8D%AE%E9%9B%86%E5%92%8C%E6%8E%A8%E7%90%86%E7%9A%84%E7%BB%8F%E5%8E%86/"/>
    <url>/2025/02/14/%E4%BD%BF%E7%94%A8YOLOv11%E8%AE%AD%E7%BB%83%E8%87%AA%E5%B7%B1%E7%9A%84%E6%95%B0%E6%8D%AE%E9%9B%86%E5%92%8C%E6%8E%A8%E7%90%86%E7%9A%84%E7%BB%8F%E5%8E%86/</url>
    
    <content type="html"><![CDATA[<p>寒假要使用YOLOv11训练自己的数据集和推理，完成后刚好来简单回忆和总结一下<br>步骤如下：<br>1.在官网下载Yolov11的代码<br>2.在官网下载Anaconda<br>3.准备好一个文件夹作为数据集<br>4.接着上网下载大量推理所需的相关图片放入数据集中<br>5.使用 labelimg 标注工具标注数据集图片，可以在python环境，使用 pip install labelimg进行安装<br>6.安装完成在Anaconda终端输入命令启动标注软件<br>7.设置自动保存标注生成的标注文件<br>8.标注格式选择yolo格式<br>9.标注所有图片<br>10.将数据集划分为训练集和验证集<br>11.完成了数据集的准备<br>12.修改yolo的训练配置文件，在项目下创建data.vaml文件名，文件名根据数据集名称取<br>13.复制如下代码：<br>train: E:\Desktop\new-yolov9\yolotest\images\train  # train images (relative to ‘path’) 4 images<br>val: E:\Desktop\new-yolov9\yolotest\images\val  # val images (relative to ‘path’) 4 images</p><p>nc: 2</p><p> class names<br>names: [‘dog’,’cat’]<br>14.在官网安装pytorch环境<br>15.在项目中新建一个requirements.txt,然后把下面代码复制进去：<br>matplotlib&gt;&#x3D;3.3.0<br>numpy&#x3D;&#x3D;1.24.4 # pinned by Snyk to avoid a vulnerability<br>opencv-python&gt;&#x3D;4.6.0<br>pillow&gt;&#x3D;7.1.2<br>pyyaml&gt;&#x3D;5.3.1<br>requests&gt;&#x3D;2.23.0<br>scipy&gt;&#x3D;1.4.1<br>tqdm&gt;&#x3D;4.64.0<br>pandas&gt;&#x3D;1.1.4<br>seaborn&gt;&#x3D;0.11.0<br>psutil  # system utilization<br>py-cpuinfo  # display CPU info<br>thop&gt;&#x3D;0.1.1  # FLOPs computation</p><p>16.在根目录新建一个python文件取名为：train.py<br>17.把训练代码复制到train.py文件：<br> -<em>- coding: utf-8 -</em>-</p><p>import warnings<br>warnings.filterwarnings(‘ignore’)<br>from ultralytics import YOLO</p><pre><code class="hljs">if __name__ == &#39;__main__&#39;:# model.load(&#39;yolo11n.pt&#39;) # 加载预训练权重,改进或者做对比实验时候不建议打开，因为用预训练模型整体精度没有很明显的提升model = YOLO(model=r&#39;D:\2-Python\1-YOLO\YOLOv11\ultralytics-8.3.2\ultralytics\cfg\models\11\yolo11.yaml&#39;)model.train(data=r&#39;data.yaml&#39;,            imgsz=640,            epochs=50,            batch=4,            workers=0,            device=&#39;&#39;,            optimizer=&#39;SGD&#39;,            close_mosaic=10,            resume=False,            project=&#39;runs/train&#39;,            name=&#39;exp&#39;,            single_cls=False,            cache=False,            )</code></pre><p>18.模型配置路径改成你自己的路径，还有数据集配置文件也修改成你自己的路径<br>19.运行代码，开始推理<br>大家试试吧：）</p>]]></content>
    
    
    <categories>
      
      <category>经历</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kali利用MS08-067漏洞入侵并控制WindowsXp主机</title>
    <link href="/2025/02/14/Kali%E5%88%A9%E7%94%A8MS08-067%E6%BC%8F%E6%B4%9E%E5%85%A5%E4%BE%B5%E5%B9%B6%E6%8E%A7%E5%88%B6WindowsXp%E4%B8%BB%E6%9C%BA/"/>
    <url>/2025/02/14/Kali%E5%88%A9%E7%94%A8MS08-067%E6%BC%8F%E6%B4%9E%E5%85%A5%E4%BE%B5%E5%B9%B6%E6%8E%A7%E5%88%B6WindowsXp%E4%B8%BB%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<blockquote><p>不知攻，安能防  </p></blockquote><h3 id="废话部分"><a href="#废话部分" class="headerlink" title="废话部分"></a><em><strong>废话部分</strong></em></h3><p>自小我对 <em><strong>网络空间安全</strong></em> 技术有一种天生的的痴迷与热爱😄<br>觉得渗透进入目标计算机和网站获得最高权限且不被对方管理员发现是一件很酷的事情（男人该有的浪漫好吧😏）<br>也认为这是在复杂多变的网络空间里保护自己的最佳手段<br>全球有很多有名的 <em><strong>黑客组织</strong></em> ， <em><strong>ATP</strong></em> ，以及 <em><strong>匿名的大佬</strong></em><br>那个， <em><strong>匿名者</strong></em> 了解一下：<br><img src="/2025/02/14/Kali%E5%88%A9%E7%94%A8MS08-067%E6%BC%8F%E6%B4%9E%E5%85%A5%E4%BE%B5%E5%B9%B6%E6%8E%A7%E5%88%B6WindowsXp%E4%B8%BB%E6%9C%BA/%E5%8C%BF%E5%90%8D%E8%80%85.webp" title="太酷啦😏"></p><p>以及他们的组织口号：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">We are Anonymous,<br>我们是匿名者，<br>We are <span class="hljs-keyword">a</span> Legion,<br>我们是军团，<br>We <span class="hljs-built_in">do</span> <span class="hljs-keyword">not</span> forgive,<br>我们不会原谅，<br>We <span class="hljs-built_in">do</span> <span class="hljs-keyword">not</span> forget,<br>我们不会忘记，<br>Expect us.<br>期待我们。<br></code></pre></td></tr></table></figure><p>以及 <em><strong>27 Attack</strong></em> （<em><strong>APT27</strong></em>）:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">之前，APT27组织在境外社交平台上发布视频称：由于佩洛西不顾中方劝阻窜访台湾，“这是个错误的选择”，将对台湾实施“特别网络行动”，以此回应佩洛西的举动 。<br><br>8月7日，APT27组织再次发布视频宣布结束此次行动。APT27组织在视频中总结了过去数日的“成果”，即对台湾多个政府部门、系统成功实施了网络攻击，并警告台当局和“台独”分子，“我们此次行动只是活动活动身体……如果你们继续挑起局势，我们还会再回来！”<br></code></pre></td></tr></table></figure><p><img src="/2025/02/14/Kali%E5%88%A9%E7%94%A8MS08-067%E6%BC%8F%E6%B4%9E%E5%85%A5%E4%BE%B5%E5%B9%B6%E6%8E%A7%E5%88%B6WindowsXp%E4%B8%BB%E6%9C%BA/APT27.jpg" title="27 Attack🥰"></p><p>中国也有 <em><strong>中国红客联盟</strong></em> ，但感觉现在并没有什么名气了😅</p><p><em><strong>网络空间安全</strong></em> 技术让一个普通人在没有军事装备的情况下，也可以 <em><strong>伸张自己的正义</strong></em><br>这也是为什么我喜爱 <em><strong>网络空间安全技术</strong></em> 的原因😏</p><p>网络上有关 <em><strong>网络空间安全技术</strong></em> 的教程很多，也很杂，大多是博人眼球，骗你交钱的，想学到一些真正的技术很难😵</p><p>寒假刚好有时间，就花时间探索了一下，也有一些收获，比如：<br> <em><strong>第一次成功用kali获得目标主机的shell</strong></em> 😏</p><p>所以就记录一下（尽管目标主机是一台本地虚拟机，哈哈🤣）</p><h3 id="正文："><a href="#正文：" class="headerlink" title="正文："></a><em><strong>正文：</strong></em></h3><p>具体的方法步骤如下（<strong>干货😏</strong>）：</p><h3 id="1-登录-vmware-workstation-官网并下载最新的-vmware-workstation-虚拟机"><a href="#1-登录-vmware-workstation-官网并下载最新的-vmware-workstation-虚拟机" class="headerlink" title="1.登录 vmware workstation 官网并下载最新的 vmware workstation 虚拟机"></a>1.登录 <em><strong>vmware workstation</strong></em> 官网并下载最新的 <em><strong>vmware workstation</strong></em> 虚拟机</h3><p><em><strong>vmware workstation</strong></em> 官网链接： <a href="https://blogs.vmware.com/workstation/2022/11/announcing-vmware-workstation-17-pro-and-player.html" title="为什么不白嫖呢🤣">vmware workstation官网</a></p><h3 id="2-在镜像网站下载-windowsxp-2003-server-的镜像"><a href="#2-在镜像网站下载-windowsxp-2003-server-的镜像" class="headerlink" title="2.在镜像网站下载 windowsxp 2003 server 的镜像"></a>2.在镜像网站下载 <em><strong>windowsxp 2003 server</strong></em> 的镜像</h3><p>镜像网站链接： <a href="https://msdn.itellyou.cn/" title="也是白嫖的😏">镜像网站</a></p><h3 id="3-在-vmware-workstation-上新建一个虚拟机，并安装下载好的-windowsxp-2003-server-的镜像"><a href="#3-在-vmware-workstation-上新建一个虚拟机，并安装下载好的-windowsxp-2003-server-的镜像" class="headerlink" title="3.在 vmware workstation 上新建一个虚拟机，并安装下载好的 windowsxp 2003 server 的镜像"></a>3.在 <em><strong>vmware workstation</strong></em> 上新建一个虚拟机，并安装下载好的 <em><strong>windowsxp 2003 server</strong></em> 的镜像</h3><p><em><strong>PS:</strong></em> 安装好 <em><strong>windowsxp 2003 server</strong></em> 虚拟机后要破解哦，不然只能用 <em><strong>30</strong></em> 天😅</p><p>你问我怎么破解🧐：</p><blockquote><p>上帝说：“B站会告诉你答案😄”</p></blockquote><h3 id="4-确保目标主机的共享服务已开启，且系统已重启"><a href="#4-确保目标主机的共享服务已开启，且系统已重启" class="headerlink" title="4.确保目标主机的共享服务已开启，且系统已重启"></a>4.确保目标主机的共享服务已开启，且系统已重启</h3><p><img src="/2025/02/14/Kali%E5%88%A9%E7%94%A8MS08-067%E6%BC%8F%E6%B4%9E%E5%85%A5%E4%BE%B5%E5%B9%B6%E6%8E%A7%E5%88%B6WindowsXp%E4%B8%BB%E6%9C%BA/%E7%AD%96%E7%95%A5.png" title="第一步"> </p><p><img src="/2025/02/14/Kali%E5%88%A9%E7%94%A8MS08-067%E6%BC%8F%E6%B4%9E%E5%85%A5%E4%BE%B5%E5%B9%B6%E6%8E%A7%E5%88%B6WindowsXp%E4%B8%BB%E6%9C%BA/%E7%BB%8F%E5%85%B8.png" title="第二步"> </p><h3 id="5-然后，使用-kali-的-MSF-进行漏洞扫描，确认目标主机的-135-和-445-端口开放"><a href="#5-然后，使用-kali-的-MSF-进行漏洞扫描，确认目标主机的-135-和-445-端口开放" class="headerlink" title="5.然后，使用 kali 的 MSF 进行漏洞扫描，确认目标主机的 135 和 445 端口开放"></a>5.然后，使用 <em><strong>kali</strong></em> 的 <em><strong>MSF</strong></em> 进行漏洞扫描，确认目标主机的 <em><strong>135</strong></em> 和 <em><strong>445</strong></em> 端口开放</h3><p><img src="/2025/02/14/Kali%E5%88%A9%E7%94%A8MS08-067%E6%BC%8F%E6%B4%9E%E5%85%A5%E4%BE%B5%E5%B9%B6%E6%8E%A7%E5%88%B6WindowsXp%E4%B8%BB%E6%9C%BA/nmap.png" title="用nmap扫描目标主机开放的端口"></p><p>我把 <em><strong>windowsxp 2003 server</strong></em> 虚拟机的防火墙关了，不然真扫不出来😅<br><img src="/2025/02/14/Kali%E5%88%A9%E7%94%A8MS08-067%E6%BC%8F%E6%B4%9E%E5%85%A5%E4%BE%B5%E5%B9%B6%E6%8E%A7%E5%88%B6WindowsXp%E4%B8%BB%E6%9C%BA/msf6.png" title="用MSF进行漏洞扫描"></p><h3 id="6-利用-MS08-067-漏洞自动进行攻击"><a href="#6-利用-MS08-067-漏洞自动进行攻击" class="headerlink" title="6.利用 MS08-067 漏洞自动进行攻击"></a>6.利用 <em><strong>MS08-067</strong></em> 漏洞自动进行攻击</h3><p><img src="/2025/02/14/Kali%E5%88%A9%E7%94%A8MS08-067%E6%BC%8F%E6%B4%9E%E5%85%A5%E4%BE%B5%E5%B9%B6%E6%8E%A7%E5%88%B6WindowsXp%E4%B8%BB%E6%9C%BA/%E5%85%A5%E4%BE%B5.png" title="利用MS08-067漏洞"></p><h3 id="7-获得目标主机的shell"><a href="#7-获得目标主机的shell" class="headerlink" title="7.获得目标主机的shell"></a>7.获得目标主机的shell</h3><p><img src="/2025/02/14/Kali%E5%88%A9%E7%94%A8MS08-067%E6%BC%8F%E6%B4%9E%E5%85%A5%E4%BE%B5%E5%B9%B6%E6%8E%A7%E5%88%B6WindowsXp%E4%B8%BB%E6%9C%BA/%E6%88%90%E5%8A%9F.png" title="获得目标主机的shell🥳"></p><h3 id="8-可以成功在目标主机创建指定文件，说明入侵成功"><a href="#8-可以成功在目标主机创建指定文件，说明入侵成功" class="headerlink" title="8.可以成功在目标主机创建指定文件，说明入侵成功"></a>8.可以成功在目标主机创建指定文件，说明入侵成功</h3><p><img src="/2025/02/14/Kali%E5%88%A9%E7%94%A8MS08-067%E6%BC%8F%E6%B4%9E%E5%85%A5%E4%BE%B5%E5%B9%B6%E6%8E%A7%E5%88%B6WindowsXp%E4%B8%BB%E6%9C%BA/%E9%AA%8C%E8%AF%81.png" title="入侵成功"></p><h3 id="9-后面，我们还可以通过所获得目标主机的shell创建新用户并设置密码，以进一步增强对目标主机的控制🧐（可选）"><a href="#9-后面，我们还可以通过所获得目标主机的shell创建新用户并设置密码，以进一步增强对目标主机的控制🧐（可选）" class="headerlink" title="9.后面，我们还可以通过所获得目标主机的shell创建新用户并设置密码，以进一步增强对目标主机的控制🧐（可选）"></a>9.后面，我们还可以通过所获得目标主机的shell创建新用户并设置密码，以进一步增强对目标主机的控制🧐（可选）</h3><h3 id="10-利用kali远程登录新创建的用户账户，成功控制目标主机（可选）"><a href="#10-利用kali远程登录新创建的用户账户，成功控制目标主机（可选）" class="headerlink" title="10.利用kali远程登录新创建的用户账户，成功控制目标主机（可选）"></a>10.利用kali远程登录新创建的用户账户，成功控制目标主机（可选）</h3><p>大家有时间可以尝试一下哦🥰</p>]]></content>
    
    
    <categories>
      
      <category>网络空间安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在本地部署Deepseek的经历</title>
    <link href="/2025/02/14/%E5%9C%A8%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2Deepseek/"/>
    <url>/2025/02/14/%E5%9C%A8%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2Deepseek/</url>
    
    <content type="html"><![CDATA[<h2 id="寒假期间-Deepseek-全网爆火"><a href="#寒假期间-Deepseek-全网爆火" class="headerlink" title="寒假期间 Deepseek 全网爆火"></a>寒假期间 <em><strong>Deepseek</strong></em> 全网爆火</h2><p>这是 <em><strong>Deepseek</strong></em> 的官网 <a href="https://www.deepseek.com/" title="为什么不试试呢hhhhh">Deepseek官网</a>。</p><p><em><strong>Deepseek</strong></em> 有多 <strong>火爆</strong> ， <em><strong>Look this</strong></em> :<br>在苹果美国区应用商店：<br><img src="/2025/02/14/%E5%9C%A8%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2Deepseek/%E8%8B%B9%E6%9E%9C%E7%BE%8E%E5%9B%BD%E5%8C%BA%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97.jpg" title="嘿嘿，榜一大哥了解一下🥳"><br>我：这是个好东西<br>于是迫不及待的登录 <em><strong>Deepseek</strong></em> 的官网，准备体验一下国产 <em><strong>AI</strong></em> 大模型的强大😍<br>结果：<br><em><strong>Deepseek</strong></em> 强烈谴责，坚决反对我的访问行为😑<br><img src="/2025/02/14/%E5%9C%A8%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2Deepseek/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%B9%81%E5%BF%99.png" title="🤖：🤣👉🤡"><br>我：。。。。。  </p><p>古人言道：<br><del>那些杀不死我的，终将使我更加强大！</del><br>只要思想不滑坡，办法总比困难多！</p><p>于是我打算：<del>玩Chatgpt去</del>把 <em><strong>Deepseek</strong></em> <strong>部署到本地</strong><br>我：🥸👉 <em><strong>Deepseek</strong></em> 你小子<br>🤖：🤣👉🤡   </p><p>那么说干就干：   </p><h3 id="在本地部署-Deepseek-的步骤如下（让我们一步一步来😏）"><a href="#在本地部署-Deepseek-的步骤如下（让我们一步一步来😏）" class="headerlink" title="在本地部署 Deepseek 的步骤如下（让我们一步一步来😏）:"></a>在本地部署 <em><strong>Deepseek</strong></em> 的步骤如下（让我们一步一步来😏）:</h3><h3 id="1-在官网下载-LM-Stdio"><a href="#1-在官网下载-LM-Stdio" class="headerlink" title="1.在官网下载 LM Stdio"></a>1.在官网下载 <em><strong>LM Stdio</strong></em></h3><ul><li>这是 <em><strong>LM Stdio</strong></em> 的官网 <a href="https://lmstudio.ai/" title="冲冲冲">LM Stdio官网</a>。</li></ul><h3 id="2-换国内镜像源-hf-mirror-（如果无法联网的话）"><a href="#2-换国内镜像源-hf-mirror-（如果无法联网的话）" class="headerlink" title="2.换国内镜像源 hf-mirror （如果无法联网的话）"></a>2.换国内镜像源 <em><strong>hf-mirror</strong></em> （如果无法联网的话）</h3><h3 id="3-使用-LM-Stdio-的-Power-user-（不然搜不到-model-）"><a href="#3-使用-LM-Stdio-的-Power-user-（不然搜不到-model-）" class="headerlink" title="3.使用 LM Stdio 的 Power user （不然搜不到 model ）"></a>3.使用 <em><strong>LM Stdio</strong></em> 的 <em><strong>Power user</strong></em> （不然搜不到 <em><strong>model</strong></em> ）</h3><h3 id="4-搜索-Deepseek-r1-的模型并下载"><a href="#4-搜索-Deepseek-r1-的模型并下载" class="headerlink" title="4.搜索 Deepseek r1 的模型并下载"></a>4.搜索 <em><strong>Deepseek r1</strong></em> 的模型并下载</h3><h4 id="【模型-de-选择】"><a href="#【模型-de-选择】" class="headerlink" title="【模型 de 选择】"></a>【模型 <em><strong>de</strong></em> 选择】</h4><table><thead><tr><th align="center">有无 <em><strong>GPU</strong></em></th><th align="center"><em><strong>BQ</strong></em> 选择</th></tr></thead><tbody><tr><td align="center">没有 <em><strong>GPU</strong></em></td><td align="center"><em><strong>1.5B Q8</strong></em> 推理或者 <em><strong>8B Q4</strong></em> 推理</td></tr><tr><td align="center"><em><strong>4G GPU</strong></em></td><td align="center"><em><strong>8B Q4</strong></em> 推理</td></tr><tr><td align="center"><em><strong>8G GPU</strong></em></td><td align="center"><em><strong>32B Q4</strong></em> 推理或者 <em><strong>8B Q4</strong></em> 推理</td></tr><tr><td align="center"><em><strong>16G GPU</strong></em></td><td align="center"><em><strong>32B Q4</strong></em> 推理或者 <em><strong>32B Q8</strong></em> 推理</td></tr><tr><td align="center"><em><strong>24G GPU</strong></em></td><td align="center"><em><strong>32B Q8</strong></em> 推理或者 <em><strong>70B Q2</strong></em> 推理</td></tr></tbody></table><p><em><strong>Qwen</strong></em> 底模除了 <em><strong>1.5B</strong></em> 其他不建议； <em><strong>Llama</strong></em> 底模推荐</p><h3 id="5-下载选择的-Deepseek-模型（比如我下的就是-Deepseek-r1-8B-Q4-模型）"><a href="#5-下载选择的-Deepseek-模型（比如我下的就是-Deepseek-r1-8B-Q4-模型）" class="headerlink" title="5.下载选择的 Deepseek 模型（比如我下的就是 Deepseek r1 8B Q4 模型）"></a>5.下载选择的 <em><strong>Deepseek</strong></em> 模型（比如我下的就是 <em><strong>Deepseek r1 8B Q4</strong></em> 模型）</h3><p><img src="/2025/02/14/%E5%9C%A8%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2Deepseek/%E5%A4%A7%E6%A8%A1%E5%9E%8B.png" title="电脑就那么点性能😭"></p><h3 id="6-开启一段新对话-Chat"><a href="#6-开启一段新对话-Chat" class="headerlink" title="6.开启一段新对话(Chat)"></a>6.开启一段新对话(Chat)</h3><h3 id="7-设置并载入下载好的-Deepseek-模型"><a href="#7-设置并载入下载好的-Deepseek-模型" class="headerlink" title="7.设置并载入下载好的 Deepseek 模型"></a>7.设置并载入下载好的 <em><strong>Deepseek</strong></em> 模型</h3><h3 id="8-接着就使用-Deepseek-模型啦🥰"><a href="#8-接着就使用-Deepseek-模型啦🥰" class="headerlink" title="8.接着就使用 Deepseek 模型啦🥰"></a>8.接着就使用 <em><strong>Deepseek</strong></em> 模型啦🥰</h3><p>有了 <em><strong>Deepseek</strong></em> 模型， <del>为什么不搞点事情</del> 使用一下呢🥸<br>于是乎：   </p><h3 id="可供测试的数学题"><a href="#可供测试的数学题" class="headerlink" title="可供测试的数学题"></a><em><strong>可供测试的数学题</strong></em></h3><ul><li><em><strong>1117117</strong></em> 是否是素数？（<strong>是</strong>）</li><li><em><strong>2024^2025</strong></em> 和 <em><strong>2025^2024</strong></em> 哪个大？（<strong>前者</strong>）</li><li><em><strong>sin(x) + xcos(x)</strong></em> 在 <em><strong>(-pi, pi)</strong></em> 中有几个零点？（<strong>三个</strong>）</li><li>请手动计算并给出前 <em><strong>5</strong></em> 个梅森素数（自己查喽）</li><li>定义 <em><strong>W(t)</strong></em> 是标准布朗运动，求 <em><strong>f(x)</strong></em> 使得 <em><strong>W(t)^2 + f(t)</strong></em> 是一个鞅。(<strong>f(t) &#x3D; -t</strong>)</li></ul><p><img src="/2025/02/14/%E5%9C%A8%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2Deepseek/d.png" title="2024^2025和2025^2024哪个大？"></p><p>最后祝大家玩的开心🥳</p>]]></content>
    
    
    <categories>
      
      <category>经历</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建博客的过程</title>
    <link href="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/"/>
    <url>/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<blockquote><p><em><strong>上帝说要有博客，于是就有了博客</strong></em>    </p></blockquote><p>于是：</p><h3 id="在-寒假的空闲时间中-，我用-Hexo-搭建了一个-属于自己的博客-🥳"><a href="#在-寒假的空闲时间中-，我用-Hexo-搭建了一个-属于自己的博客-🥳" class="headerlink" title="在 寒假的空闲时间中 ，我用 Hexo 搭建了一个 属于自己的博客 🥳"></a>在 <em><strong>寒假的空闲时间中</strong></em> ，我用 <em><strong>Hexo</strong></em> 搭建了一个 <em><strong>属于自己的博客</strong></em> 🥳</h3><p><del>我知道你很急，但你别急😁</del><br>下面让我来说说搭建博客的过程吧😏   </p><h3 id="具体的操作如下："><a href="#具体的操作如下：" class="headerlink" title="具体的操作如下："></a>具体的操作如下：</h3><h3 id="1-注册好一个-GitHub-账号（因为后面要把我们的博客发布到-github-pages-）"><a href="#1-注册好一个-GitHub-账号（因为后面要把我们的博客发布到-github-pages-）" class="headerlink" title="1.注册好一个 GitHub 账号（因为后面要把我们的博客发布到 github pages ）"></a>1.注册好一个 <em><strong>GitHub</strong></em> 账号（因为后面要把我们的博客发布到 <em><strong>github pages</strong></em> ）</h3><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/github.png" title="这是我注册的GitHub🥰"></p><h3 id="2-在电脑上安装好-Git-，没有-Git-哪来-Hub-呢😏"><a href="#2-在电脑上安装好-Git-，没有-Git-哪来-Hub-呢😏" class="headerlink" title="2.在电脑上安装好 Git ，没有 Git 哪来 Hub 呢😏"></a>2.在电脑上安装好 <em><strong>Git</strong></em> ，没有 <em><strong>Git</strong></em> 哪来 <em><strong>Hub</strong></em> 呢😏</h3><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/nvm.png" title="在这里下Git😆"></p><h3 id="3-在电脑上安装-NodeJS-（因为-Hexo-是基于-NodeJS-编写的，所以需要安装-NodeJS-和-npm-工具）"><a href="#3-在电脑上安装-NodeJS-（因为-Hexo-是基于-NodeJS-编写的，所以需要安装-NodeJS-和-npm-工具）" class="headerlink" title="3.在电脑上安装 NodeJS （因为 Hexo 是基于 NodeJS 编写的，所以需要安装 NodeJS 和 npm 工具）"></a>3.在电脑上安装 <em><strong>NodeJS</strong></em> （因为 <em><strong>Hexo</strong></em> 是基于 <em><strong>NodeJS</strong></em> 编写的，所以需要安装 <em><strong>NodeJS</strong></em> 和 <em><strong>npm</strong></em> 工具）</h3><h3 id="4-后面就可以开始整活啦"><a href="#4-后面就可以开始整活啦" class="headerlink" title="4.后面就可以开始整活啦"></a>4.后面就可以开始整活啦</h3><ul><li>先在 <em><strong>GitHub</strong></em> 上创建一个新的代码仓库用于保存项目文件   </li><li>点击 <em><strong>Your repositories</strong></em> ，进入仓库页面</li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/%E4%BD%A0%E7%9A%84%E4%BB%93%E5%BA%93.png" title="进入仓库页面">   </p><ul><li>点击 <em><strong>New</strong></em> 按钮，进入仓库创建页面</li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93.png" title="进入仓库创建页面">   </p><ul><li>填写仓库名，格式必须为 <em><strong>&lt; 用户名 &gt; .github.io</strong></em>（不然到时浏览器连不上去😏），再点击 <em><strong>Create repository</strong></em> 就完成了第一步🥳</li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/%E5%A1%AB%E5%86%99%E4%BB%93%E5%BA%93%E5%90%8D.png" title="填写仓库名">   </p><h3 id="5-安装-Hexo"><a href="#5-安装-Hexo" class="headerlink" title="5.安装 Hexo :"></a>5.安装 <em><strong>Hexo</strong></em> :</h3><ul><li>在gitbash中输入：  <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span> <br></code></pre></td></tr></table></figure></li><li>创建一个项目 <em><strong>hexo-blog</strong></em> 并初始化：  <figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">hexo init hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>cd hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>npm <span class="hljs-keyword">install </span>  <br></code></pre></td></tr></table></figure></li></ul><h3 id="6-使用-Fluid-来更换主题🥰"><a href="#6-使用-Fluid-来更换主题🥰" class="headerlink" title="6.使用 Fluid 来更换主题🥰"></a>6.使用 <em><strong>Fluid</strong></em> 来更换主题🥰</h3><ul><li>安装主题：<ul><li>下载最新的 <em><strong>release</strong></em> 版本解压到 <em><strong>themes</strong></em> 目录，并将解压出的文件夹重命名为 <em><strong>fluid</strong></em></li></ul></li><li>指定主题：<ul><li>修改 <em><strong>Hexo</strong></em> 博客目录中的 <em><strong>_config.yml</strong></em>：   <figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">theme:</span> fluid <br><span class="hljs-symbol">language:</span> <span class="hljs-built_in">zh</span>-CN   <br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="7-创建【关于页】："><a href="#7-创建【关于页】：" class="headerlink" title="7.创建【关于页】："></a>7.创建【关于页】：</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">hexo <span class="hljs-keyword">new</span> page about   <br></code></pre></td></tr></table></figure><p>创建成功后，编辑博客目录下&#x2F;source&#x2F;about&#x2F;index.md，添加 layout 属性<br>修改后的文件示例如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2025-02-10 13:03:47</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写关于页的正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><h3 id="8-创建文章😏（干货来啦）"><a href="#8-创建文章😏（干货来啦）" class="headerlink" title="8.创建文章😏（干货来啦）"></a>8.创建文章😏（<em><strong>干货来啦</strong></em>）</h3><ul><li>修改 <em><strong>Hexo</strong></em> 博客目录中的 <em><strong>_config.yml</strong></em> （打开这个配置是为了在生成文章的时候生成一个同名的资源目录用于存放图片文件）：   <figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-params">post_asset_folder:</span> <span class="hljs-literal">true</span>   <br></code></pre></td></tr></table></figure></li><li>执行如下命令创建一篇新文章： <figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">hexo <span class="hljs-built_in">new</span> <span class="hljs-built_in">post</span> 测试文章<br></code></pre></td></tr></table></figure></li><li>执行完成后在 <em><strong>source\ _posts</strong></em> 目录下生成了一个 <em><strong>md</strong></em> 文件和一个同名的资源目录(用于存放图片):</li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/md.png" title="生成了一个md文件和一个同名的资源目录😁"></p><ul><li>在资源目录测试文章中放一张图片 <em><strong>test.png</strong></em></li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/test%E5%9B%BE%E7%89%87.png" title="放一张test.png图片"></p><ul><li>在测试文章 <em><strong>.md</strong></em> 中添加内容如下，演示了图片的三种引用方式<ul><li>第一种为官方推荐用法</li><li>第二种为 <em><strong>markdown</strong></em> 语法</li><li>第三种和前两种图片存放位置不一样，是将图片放在 <em><strong>\source\images</strong></em> 目录下<br>这三种写法在 <em><strong>md</strong></em> 文件中图片是无法显示的，但是在页面上能正常显示<br>图片的引入方式可参考官方文档 <a href="https://hexo.io/zh-cn/docs/asset-folders.html%EF%BC%8C%E6%9C%89%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D">https://hexo.io/zh-cn/docs/asset-folders.html，有详细介绍</a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">测试文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2025-02-10 13:03:47</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">原创</span><br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">Java</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这是一篇测试文章</span><br><br>&#123;<span class="hljs-string">%</span> <span class="hljs-string">asset_img</span> <span class="hljs-string">test.png</span> <span class="hljs-string">图片引用方法一</span> <span class="hljs-string">%</span>&#125;<br><br><span class="hljs-type">![</span><span class="hljs-string">图片引用方法二](test.png)</span><br><br><span class="hljs-type">![</span><span class="hljs-string">图片引用方法三](/images/test.png)</span><br></code></pre></td></tr></table></figure></li></ul></li></ul><p>其中的内容可以根据自身需求进行更改😆</p><h3 id="9-个性化页面展示"><a href="#9-个性化页面展示" class="headerlink" title="9.个性化页面展示"></a>9.个性化页面展示</h3><p>页面的标题等位置显示的是默认文字，可以改下显示一些个性化的信息</p><ul><li>浏览器 <em><strong>tab</strong></em> 页名称<ul><li>修改根目录下 <em><strong>_config.yml</strong></em> 中的 <em><strong>title</strong></em> 字段</li></ul></li><li>博客标题<ul><li>主题目录 <em><strong>themes\fluid</strong></em> 下 <em><strong>_config.yml</strong></em> 中的 <em><strong>blog_title</strong></em> 字段</li></ul></li><li>主页正中间的文字<ul><li>主题目录 <em><strong>themes\fluid下_config.yml</strong></em> 中的 <em><strong>text</strong></em> 字段</li></ul></li></ul><h3 id="10-后面添加阅读量统计"><a href="#10-后面添加阅读量统计" class="headerlink" title="10.后面添加阅读量统计"></a>10.后面添加阅读量统计</h3><p>其实 <em><strong>Fluid</strong></em> 主题写好了统计阅读量的代码，但是缺少相应配置所以没有开启，所以需要借助三方服务来统计阅读量，可以用 <em><strong>Leancloud</strong></em> 的免费服务来进行统计</p><ul><li>申请 <em><strong>LeanCloud</strong></em> 账号并创建应用<ul><li>进入官网并注册账号</li><li><em><strong>官网链接</strong></em>  <a href="https://console.leancloud.cn/login?from=/apps" title="去注册一个吧🥰">LeanCloud官网</a></li></ul></li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/%E6%B3%A8%E5%86%8C%E8%B4%A6%E5%8F%B7.png" title="注册账号"></p><ul><li>需要实名认证的，只有完成后才能使用各项服务</li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/%E5%AE%9E%E5%90%8D%E8%AE%A4%E8%AF%81.png" title="嘿嘿，未成年人慎重🤡"></p><ul><li>验证邮箱</li><li>创建应用，选择开发版即可， <em><strong>免费的</strong></em>😏</li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/%E5%88%9B%E5%BB%BA%E5%BA%94%E7%94%A8.png" title="创建应用"></p><ul><li>进入该应用的设置 <em><strong>-&gt;</strong></em> 应用凭证，找到 <em><strong>AppID</strong></em> 和 <em><strong>AppKey</strong></em> ，记录下来后面配置要用</li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/key.png" title="AppID和AppKey"></p><ul><li>修改 <em><strong>Fluid</strong></em> 配置<br>打开主题目录 <em><strong>themes\fluid</strong></em> 下的 <em><strong>_config.yml</strong></em> 文件，修改如下配置：<ul><li>单篇文章阅读量计数<br>打开统计开关</li></ul></li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/%E7%BB%9F%E8%AE%A1.png" title="打开统计开关"></p><ul><li>配置leancloud的app_id和app_key</li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/%E9%85%8D%E7%BD%AEleancloud.png" title="配置leancloud"></p><ul><li>打开计数功能，统计来源改为leancloud</li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/%E6%89%93%E5%BC%80%E8%AE%A1%E6%95%B0%E5%8A%9F%E8%83%BD.png" title="打开计数功能"></p><ul><li>页面底部展示网站的PV、UV统计数</li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/PVUV.png" title="展示网站的PV、UV统计数"></p><h3 id="11-添加评论功能"><a href="#11-添加评论功能" class="headerlink" title="11.添加评论功能"></a>11.添加评论功能</h3><p>评论功能的代码也已经写好了，只不过没有开启，需要修改一些配置<br>让我们打开主题目录 <em><strong>themes\fluid</strong></em> 下的 <em><strong>_config.yml</strong></em> 文件，修改配置</p><ul><li>启用评论插件：</li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/%E5%90%AF%E7%94%A8%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6.png" title="启用评论插件"></p><ul><li>配置 <em><strong>LeanCloud</strong></em> 的 <em><strong>appId</strong></em> 和 <em><strong>appkey</strong></em></li></ul><p><img src="/2025/02/10/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/%E9%85%8D%E7%BD%AELeanCloud%E7%9A%84appId%E5%92%8Cappkey.png" title="配置LeanCloud的appId和appkey"></p><h3 id="12-发布到-GitHub-Pages"><a href="#12-发布到-GitHub-Pages" class="headerlink" title="12.发布到 GitHub Pages"></a>12.发布到 <em><strong>GitHub Pages</strong></em></h3><ul><li>安装 <em><strong>hexo-deployer-git</strong></em><br>在 <em><strong>git bash</strong></em> 中输入：<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure></li><li>修改根目录下的 <em><strong>_config.yml</strong></em> ，配置 <em><strong>GitHub</strong></em> 相关信息<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> https:<span class="hljs-comment">//github.com/cpython333/cpython333.github.io.git</span><br><span class="hljs-symbol">  branch:</span> main<br><span class="hljs-symbol">  token:</span> XXX<br></code></pre></td></tr></table></figure></li><li>再在 <em><strong>git bash</strong></em> 中输入：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo clean<br>hexo <span class="hljs-selector-tag">g</span> -d<br>hexo s<br></code></pre></td></tr></table></figure></li></ul><p>就部署到 <em><strong>GitHub</strong></em> 啦🥳</p><h3 id="13-浏览器访问一下-https-cpython333-github-io-（这是我的博客网址🥰）"><a href="#13-浏览器访问一下-https-cpython333-github-io-（这是我的博客网址🥰）" class="headerlink" title="13.浏览器访问一下 https://cpython333.github.io/ （这是我的博客网址🥰）"></a>13.浏览器访问一下 <a href="https://cpython333.github.io/">https://cpython333.github.io/</a> （这是我的博客网址🥰）</h3><p>大家快试试吧🤩</p>]]></content>
    
    
    <categories>
      
      <category>经历</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
